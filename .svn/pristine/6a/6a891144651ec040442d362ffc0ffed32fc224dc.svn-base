
let _=require('underscore');
let client =require('../lib/client.js');
module.exports=Employee;
function Employee() {
}

Employee.setup = function () {
    if (!_.has(Employee,'init')){
        let config=require('../config/seneca.json');
        let host={};
        _.extend(host,require('../config/host.json'));
        host.pin="field:employee,role:manager";
        let pattern={field:'employee',role:'manager'};
        let setup  =require('../lib/setup.js');
        let bridge =require('../lib/bridge.js');
        var model  =bridge(config,pattern,host,Employee);
        setup(Employee,model);
        Employee.init=true;
    }
}

Employee.queryEmployee = function(phone,cb){
    let param={};
    param.phone=phone;
    let pattern={field:'employee',role:'manager',cmd:'query',param};
    client.sin(Employee.host,pattern,cb);
};


Employee.queryFromWechatId = function(id,cb){
    let param={};
    param.wechat=id;
    let pattern={field:'employee',role:'manager',cmd:'query',param};
    client.sin(Employee.host,pattern,cb);
};

Employee.queryFromId = function(id,cb){
    let param={};
    param.id=id;
    let pattern={field:'employee',role:'manager',cmd:'query',param};
    client.sin(Employee.host,pattern,cb);
};

/**
 *  员工绑定微信ID
 * @param userId
 *               员工ID
 * @param wechatId
 * @param cb
 */
Employee.bind=function(employeeId,wechatId,cb){
    let param={};
    param.id=employeeId;
    param.wechat=wechatId;
    let pattern={field:'employee',role:'manager',cmd:'update',param};
    client.sin(Employee.host,pattern,cb);
};


Employee.setup();